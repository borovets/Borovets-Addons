#!/bin/sh

case $1 in
	--__cmp)
		shift
		prog=cmp
		cmp='${CMP-cmp}' 
	;;
	*)
		prog=diff
		cmp='${DIFF-diff}'
	;;
esac

version="z$prog (gzip) 1.10

Copyright (C) 2009, 2011-2018 Free Software Foundation, Inc. This is free software. You may redistribute copies of it under the terms of the GNU General Public License <https://www.gnu.org/licenses/gpl.html>.

Written by Jean-loup Gailly."

usage="Usage: $0 [OPTION]... FILE1 [FILE2]
Compare FILE1 to FILE2, using their uncompressed contents if they are compressed. If FILE2 is omitted, compare FILE1 to the uncompressed contents of FILE1.gz. Do comparisons like '$prog' does.

OPTIONs are the same as for '$prog'.

Report bugs to <bug-gzip@gnu.org>."

escape='
	s/'\''/'\''\\'\'''\''/g
	$s/X$/'\''/
'

while :; do
	case $1 in
		--h*)
			printf '%s\n' "$usage" || exit 2
			exit
		;;
		--v*)
			printf '%s\n' "$version" || exit 2
			exit
		;;
		--)
			shift
			break
		;;
		-*\'*)
			cmp="$cmp '"`printf '%sX\n' "$1" | sed "$escape"`
		;;
		-?*)
			cmp="$cmp '$1'"
		;;
		*)
			break
		;;
	esac
	shift
done

cmp="$cmp --"

for file; do
	test "X$file" = X- || <"$file" || exit 2
done

gzip_status=0

exec 3 >&1

if test $# -eq 1; then
	case $1 in
		*[-.]gz* | *[-.][zZ] | *.t[ga]z)
			FILE=`expr "X$1" : 'X\(.*\)[-.][zZtga]*$'`
			gzip_status=$(
				exec 4 >&1
				(gzip -cd -- "$1" 4>&-; echo $? >&4) 3 >&- | eval "$cmp" - '"$FILE"' >&3
			)
		;;
		*)
			printf >&2 '%s\n' "$0: $1: unknown compressed file extension"
			exit 2
		;;
	esac
elif test $# -eq 2; then
    case "$1" in
		*[-.]gz* | *[-.][zZ] | *.t[ga]z | -)
			case "$2" in
				*[-.]gz* | *[-.][zZ] | *.t[ga]z | -)
					if test "$1$2" = --; then
						gzip_status=$(
							exec 4 >&1
							(gzip -cdfq - 4 >&-; echo $? >&4) 3 >&- | eval "$cmp" - - >&3
						)
					elif
						echo X |
						(echo X | eval "$cmp" /dev/fd/5 - >/dev/null 2 >&1) \
						5 <&0
					then
						gzip_status=$(
							exec 4 >&1
							(gzip -cdfq -- "$1" 4 >&-; echo $? >&4) 3 >&- |
							( (gzip -cdfq -- "$2" 4 >&-; echo $? >&4) 3 >&- 5 <&- </dev/null | eval "$cmp" /dev/fd/5 - >&3) 5 <&0
						)
					fi
				;;
				cmp_status=$?
				case $gzip_status in
					*[1-9]*)
						gzip_status=1
					;;
					*)
						gzip_status=0
					;;
				esac
				(exit $cmp_status)
					else
						tmp=
						trap '
						test -n "$tmp" && rm -f "$tmp"
						(exit 2)
						exit 2
						' HUP INT PIPE TERM 0
						case $TMPDIR in
							/ | /*/)
							;;
							/*)
								TMPDIR=$TMPDIR/
							;;
							*)
								TMPDIR=/tmp/
							;;
						esac
						if type mktemp >/dev/null 2 >&1; then
							tmp=`mktemp "${TMPDIR}zdiffXXXXXXXXX"` ||
							exit 2
						else
							set -C
							tmp=${TMPDIR}zdiff$$
						fi
						gzip -cdfq -- "$2" > "$tmp" || exit 2
						gzip_status=$(
							exec 4 >&1
							(gzip -cdfq -- "$1" 4 >&-; echo $? >&4) 3 >&- | eval "$cmp" - '"$tmp"' >&3
						)
						cmp_status=$?
						rm -f "$tmp" || gzip_status=$?
						trap - HUP INT PIPE TERM 0
						(exit $cmp_status)
					fi
				;;
				*)
					gzip_status=$(
						exec 4 >&1
						(gzip -cdfq -- "$1" 4 >&-; echo $? >&4) 3 >&- | eval "$cmp" - '"$2"' >&3
					)
				;;
			esac
		;;
		*)
			case "$2" in
				*[-.]gz* | *[-.][zZ] | *.t[ga]z | -)
					gzip_status=$(
					  exec 4 >&1
					  (gzip -cdfq -- "$2" 4 >&-; echo $? >&4) 3 >&- | eval "$cmp" '"$1"' - >&3
					)
				;;
				*)
					eval "$cmp" '"$1"' '"$2"'
				;;
			esac
		;;
	esac
else
	printf >&2 '%s\n' \
	"$0: invalid number of operands; try \`$0 --help' for help"
	exit 2
fi

cmp_status=$?

test "$gzip_status" -eq 0 || exit 2

exit $cmp_status
